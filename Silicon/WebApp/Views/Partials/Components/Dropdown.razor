<div id="@DropdownId" class="dropdown-field @AdditionalClasses">

    <div class="current-option" data-default-option="@DefaultOption" data-option="@SelectedOption">
        <p>@(!string.IsNullOrEmpty(SelectedOption) ? SelectedOption : DefaultOption)</p>
        <i class="fa-solid fa-chevron-down"></i>
    </div>

    <!--<div class="dropdown-window">

    </div>-->

    <div class="dropdown">
        
        @{
            if (!DefaultOptionSelectable.HasValue || DefaultOptionSelectable.Value)
            {
                <div class="option" data-option="">@DefaultOption</div>
            }

            if (Options != null)
                foreach (string option in Options)
                {
                    <div class="option" data-option="@option">@option</div>
                }
        }
    </div>
</div>

<script>
    const dropdown = document.getElementById('@(DropdownId)');

    const menus = document.getElementsByClassName("dropdown");

    dropdown.addEventListener('click', () => {

        for (const menu of menus) {
            menu.classList.toggle('active');
        }
    });

    //menus
    for (const menu of menus) {

        let options = menu.getElementsByClassName('option');

        for (const option of options) {

            option.addEventListener('click', (e) => {
                const currentOption = e.target.parentElement.parentElement.querySelector('[class="current-option"]');

                const defaultOption = currentOption.dataset.defaultOption
                    ? currentOption.dataset.defaultOption
                    : "";

                currentOption.dataset.option = e.target.innerHTML == defaultOption ? "" : e.target.innerHTML;
                currentOption.getElementsByTagName('p')[0].innerHTML = e.target.innerHTML;
            });
        }
    }
</script>

@code {
    [Parameter]
    public string DropdownId { get; set; } = null!;

    [Parameter]
    public string? AdditionalClasses { get; set; }

    [Parameter]
    public string? DefaultOption { get; set; } = "None";

    [Parameter]
    public bool? DefaultOptionSelectable { get; set; } = true;

    [Parameter]
    public string? SelectedOption { get; set; }

    [Parameter]
    public string[]? Options { get; set; }
}
